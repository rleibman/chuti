schema {
  query: Queries
  mutation: Mutations
  subscription: Subscriptions
}

scalar Instant

input UserInput {
  id: Int
  email: String!
  name: String!
  created: Instant!
  active: Boolean!
  deleted: Boolean!
  isAdmin: Boolean!
}

type ChatMessage {
  fromUser: User!
  msg: String!
  channelId: Int!
  toUser: User
  date: Instant!
}

type Mutations {
  say(msg: String!, channelId: Int!, toUser: UserInput): Boolean!
}

type Queries {
  getRecentMessages(value: Int!): [ChatMessage!]
}

type Subscriptions {
  chatStream(channelId: Int!, connectionId: String!): ChatMessage
}

type User {
  id: Int
  email: String!
  name: String!
  created: Instant!
  active: Boolean!
  deleted: Boolean!
  isAdmin: Boolean!
}